/********************************************************************************
 * MIT License

 * Â© Copyright 2023 Adobe. All rights reserved.

 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 ********************************************************************************/
import { AddOnManifestV1, AddOnManifestV2 } from "../../AddOnManifest.js";
import { AuthorInfo, IconType, LocalisedStrings, ManifestEntrypoint, RequirementsV1 } from "../../AddOnManifestTypes.js";
/**
 *  Specifies the metadata and configuration information for Developer Add-Ons
 */
export declare type AddOnManifestDeveloperV1 = {
    readonly id: string;
    readonly name?: string | LocalisedStrings;
    readonly version?: string;
    readonly manifestVersion?: number;
    readonly requirements?: RequirementsV1;
    readonly icon?: IconType | readonly IconType[];
    readonly entryPoints: readonly ManifestEntrypoint[];
    readonly strings?: string | Record<string, LocalisedStrings>;
    readonly externalURL?: string;
    readonly authorInfo?: AuthorInfo;
};
/**
 *  Specifies the metadata and configuration information for Developer Add-Ons
 */
export declare type AddOnManifestDeveloperV2 = AddOnManifestV2;
export declare type AddOnManifestDeveloper = AddOnManifestDeveloperV1 | AddOnManifestDeveloperV2;
export declare function getTestManifest(): AddOnManifestV1;
export declare function getTestManifestV1(privileged?: boolean): AddOnManifestV1;
export declare function getTestManifestV2(privileged?: boolean): AddOnManifestV2;
export declare function getTestDeveloperManifestV1(): AddOnManifestDeveloperV1;
export declare function getTestDeveloperManifestV2(privileged?: boolean): AddOnManifestDeveloperV2;
export declare function getTestManifestV2WithScript(script?: string | undefined): AddOnManifestV2;
export declare function getTestManifestV2WithDocumentSandbox(documentSandbox?: string | undefined): AddOnManifestV2;
//# sourceMappingURL=TestManifests.d.ts.map