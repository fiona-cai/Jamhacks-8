"use strict";var n=Object.defineProperty;var c=Object.getOwnPropertyDescriptor;var s=(p,l,e,i)=>{for(var t=i>1?void 0:i?c(l,e):l,a=p.length-1,d;a>=0;a--)(d=p[a])&&(t=(i?d(l,e,t):d(t))||t);return i&&t&&n(l,e,t),t};import{html as o,SpectrumElement as b}from"@spectrum-web-components/base";import{property as r}from"@spectrum-web-components/base/src/decorators.js";import{FocusVisiblePolyfillMixin as h,ObserveSlotPresence as f,ObserveSlotText as m}from"@spectrum-web-components/shared";import y from"./tab.css.js";const u=class extends h(m(f(b,'[slot="icon"]'),"")){constructor(){super(...arguments);this.disabled=!1;this.label="";this.selected=!1;this.vertical=!1;this.value=""}static get styles(){return[y]}get hasIcon(){return this.slotContentIsPresent}get hasLabel(){return!!this.label||this.slotHasContent}render(){return o`
            ${this.hasIcon?o`
                      <slot name="icon"></slot>
                  `:o``}
            <label id="item-label" ?hidden=${!this.hasLabel}>
                ${this.slotHasContent?o``:this.label}
                <slot>${this.label}</slot>
            </label>
        `}firstUpdated(e){super.firstUpdated(e),this.setAttribute("role","tab"),this.hasAttribute("id")||(this.id=`sp-tab-${u.instanceCount++}`)}updated(e){super.updated(e),e.has("selected")&&(this.setAttribute("aria-selected",this.selected?"true":"false"),this.setAttribute("tabindex",this.selected?"0":"-1")),e.has("disabled")&&(this.disabled?this.setAttribute("aria-disabled","true"):this.removeAttribute("aria-disabled"))}};export let Tab=u;Tab.instanceCount=0,s([r({type:Boolean,reflect:!0})],Tab.prototype,"disabled",2),s([r({reflect:!0})],Tab.prototype,"label",2),s([r({type:Boolean,reflect:!0})],Tab.prototype,"selected",2),s([r({type:Boolean,reflect:!0})],Tab.prototype,"vertical",2),s([r({type:String,reflect:!0})],Tab.prototype,"value",2);
//# sourceMappingURL=Tab.js.map
